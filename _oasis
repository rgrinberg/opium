OASISFormat: 0.4
Name:        opium
Version:     0.14.0
Synopsis:    Sinatra like web toolkit for OCaml
Authors:     Rudi Grinberg
Homepage:    https://github.com/rgrinberg/opium
License:     MIT
BuildTools:  ocamlbuild
Plugins:     META (0.4)

Flag examples
  Description: enable compiling the examples
  Default:     false

Library opium_rock
  Path:          rock
  Findlibname:   opium_rock
  Modules:       Opium_rock, Opium_misc
  XMETARequires: core_kernel, lwt, cohttp.lwt, fieldslib, sexplib
  BuildDepends:  core_kernel,
                 lwt,
                 cohttp.lwt,
                 fieldslib,
                 fieldslib.syntax,
                 sexplib,
                 sexplib.syntax

Library opium_rock_unix
  Path:          rock_unix
  FindlibParent: opium_rock
  Findlibname:   unix
  Modules:       Opium_rock_unix
  XMETARequires: core_kernel, lwt, cohttp.lwt, fieldslib, sexplib
  BuildDepends:  opium_rock,
                 core_kernel,
                 lwt,
                 cohttp.lwt,
                 fieldslib,
                 fieldslib.syntax,
                 sexplib,
                 sexplib.syntax


Library opium_kernel
  Path:        opium_kernel
  Pack:        true
  Findlibname: opium_kernel
  Modules:     Cookie,
               Route,
               Router,
               Debug,
               App
  BuildDepends: core_kernel,
                opium_rock,
                ezjsonm,
                base64,
                cmdliner,
                magic-mime

Library opium
  Path:          opium_unix
  Pack:          true
  FindlibName:   opium
  Modules:       Std, Static_serve
  BuildDepends:  opium_kernel,
                 core_kernel,
                 opium_rock.unix,
                 ezjsonm,
                 base64,
                 cmdliner,
                 magic-mime

Executable test_routes
  Path:           lib_test
  MainIs:         routes.ml
  Build$:         flag(tests)
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium, oUnit

Test test_routes
  Run$:             flag(tests)
  Command:          $test_routes
  WorkingDirectory: lib_test

Executable ex1
  Build$:         flag(examples)
  Path:           examples
  MainIs:         sample.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium, cow

Executable ex_hello_world
  Build$:         flag(examples)
  Path:           examples
  MainIs:         hello_world.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable middleware_ua
  Build$:         flag(examples)
  Path:           examples
  MainIs:         middleware_ua.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable uppercase_middleware
  Build$:         flag(examples)
  Path:           examples
  MainIs:         uppercase_middleware.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable read_json_body
  Build$:         flag(examples)
  Path:           examples
  MainIs:         read_json_body.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable hello_world_basic
  Build$:         flag(examples)
  Path:           examples
  MainIs:         hello_world_basic.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable hello_world_html
  Build$:         flag(examples)
  Path:           examples
  MainIs:         hello_world_html.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium, cow, cow.syntax, sexplib, sexplib.syntax

Executable auth_middleware
  Build$:         flag(examples)
  Path:           examples
  MainIs:         auth_middleware.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable static_serve_override
  Build$:         flag(examples)
  Path:           examples
  MainIs:         static_serve_override.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium

Executable exit_hook_example
  Build$:         flag(examples)
  Path:           examples
  MainIs:         exit_hook_example.ml
  Custom:         true
  CompiledObject: best
  Install:        false
  BuildDepends:   opium
